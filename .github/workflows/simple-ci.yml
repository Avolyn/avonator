name: Simple CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  # Basic Python Tests
  python-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install basic dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest fastapi uvicorn
    
    - name: Run simple tests
      run: |
        python -c "print('Python is working!')"
        python -c "import fastapi; print('FastAPI imported successfully!')"
        python -c "import uvicorn; print('Uvicorn imported successfully!')"
    
    - name: Test basic functionality
      run: |
        python tests/test_simple.py

  # Docker Build Test
  docker-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        docker build -f Dockerfile.simple -t guardrails-api:test .
        echo "Docker build completed successfully!"
    
    - name: Test Docker image
      run: |
        docker run --rm guardrails-api:test echo "Docker container is working!"

  # Secret Verification
  verify-secrets:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Verify GitHub Secrets
      run: |
        echo "üîê Verifying GitHub Secrets Configuration"
        echo "=========================================="
        
        if [ "${{ secrets.GUARDRAILS_API_KEY }}" != "" ]; then
          echo "‚úÖ GUARDRAILS_API_KEY: Configured"
        else
          echo "‚ùå GUARDRAILS_API_KEY: Not configured"
        fi
        
        if [ "${{ secrets.DOCKER_USERNAME }}" != "" ]; then
          echo "‚úÖ DOCKER_USERNAME: Configured"
        else
          echo "‚ùå DOCKER_USERNAME: Not configured"
        fi
        
        if [ "${{ secrets.DOCKER_PASSWORD }}" != "" ]; then
          echo "‚úÖ DOCKER_PASSWORD: Configured"
        else
          echo "‚ùå DOCKER_PASSWORD: Not configured"
        fi
        
        if [ "${{ secrets.JWT_SECRET }}" != "" ]; then
          echo "‚úÖ JWT_SECRET: Configured"
        else
          echo "‚ùå JWT_SECRET: Not configured"
        fi
        
        if [ "${{ secrets.GRAFANA_PASSWORD }}" != "" ]; then
          echo "‚úÖ GRAFANA_PASSWORD: Configured"
        else
          echo "‚ùå GRAFANA_PASSWORD: Not configured"
        fi
        
        echo "=========================================="
        echo "Secret verification completed!"

  # Success Notification
  success:
    runs-on: ubuntu-latest
    needs: [python-tests, docker-test, verify-secrets]
    if: always()
    steps:
    - name: Pipeline Status
      run: |
        echo "üéâ CI Pipeline Status Report"
        echo "============================"
        echo "Python Tests: ${{ needs.python-tests.result }}"
        echo "Docker Test: ${{ needs.docker-test.result }}"
        echo "Secret Verification: ${{ needs.verify-secrets.result }}"
        echo "============================"
        
        if [ "${{ needs.python-tests.result }}" == "success" ] && [ "${{ needs.docker-test.result }}" == "success" ] && [ "${{ needs.verify-secrets.result }}" == "success" ]; then
          echo "üéâ All checks passed! Your setup is working correctly!"
        else
          echo "‚ö†Ô∏è  Some checks failed, but this is normal for initial setup."
          echo "The important thing is that the pipeline is running!"
        fi
