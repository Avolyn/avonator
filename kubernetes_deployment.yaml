apiVersion: v1
kind: Namespace
metadata:
  name: guardrails
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: guardrails-config
  namespace: guardrails
data:
  SPACY_MODEL: "en_core_web_sm"
  STANZA_MODEL: "en"
  HUGGINGFACE_MODEL: "unitary/toxic-bert"
  MAX_TEXT_LENGTH: "50000"
  BATCH_SIZE: "32"
  CACHE_DEFAULT_TTL: "300"
  RATE_LIMIT_REQUESTS: "100"
  RATE_LIMIT_WINDOW: "60"
  LOG_LEVEL: "INFO"
---
apiVersion: v1
kind: Secret
metadata:
  name: guardrails-secrets
  namespace: guardrails
type: Opaque
data:
  GUARDRAILS_API_KEY: ZGVmYXVsdC1hcGkta2V5LWNoYW5nZS1pbi1wcm9kdWN0aW9u
  JWT_SECRET: eW91ci1qd3Qtc2VjcmV0LWNoYW5nZS1pbi1wcm9kdWN0aW9u
  REDIS_PASSWORD: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: guardrails-api
  namespace: guardrails
  labels:
    app: guardrails-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: guardrails-api
  template:
    metadata:
      labels:
        app: guardrails-api
    spec:
      containers:
      - name: guardrails-api
        image: guardrails-api:latest
        ports:
        - containerPort: 8000
        env:
        - name: HOST
          value: "0.0.0.0"
        - name: PORT
          value: "8000"
        - name: WORKERS
          value: "1"
        - name: REDIS_URL
          value: "redis://redis-service:6379/0"
        - name: DEBUG
          value: "False"
        - name: ENABLE_CORS
          value: "True"
        envFrom:
        - configMapRef:
            name: guardrails-config
        - secretRef:
            name: guardrails-secrets
        resources:
          requests:
            memory: "2Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        livenessProbe:
          httpGet:
            path: /v1/guardrails/health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /v1/guardrails/health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: model-cache
          mountPath: /app/models
      volumes:
      - name: model-cache
        emptyDir:
          sizeLimit: 10Gi
      initContainers:
      - name: model-downloader
        image: guardrails-api:latest
        command: ["python", "-c", "import spacy; spacy.cli.download('en_core_web_sm')"]
        volumeMounts:
        - name: model-cache
          mountPath: /app/models
---
apiVersion: v1
kind: Service
metadata:
  name: guardrails-service
  namespace: guardrails
spec:
  selector:
    app: guardrails-api
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: guardrails-ingress
  namespace: guardrails
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  rules:
  - host: guardrails.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: guardrails-service
            port:
              number: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: guardrails
spec:
  selector:
    app: redis
  ports:
  - port: 6379
    targetPort: 6379
    protocol: TCP
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: guardrails
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        volumeMounts:
        - name: redis-data
          mountPath: /data
      volumes:
      - name: redis-data
        emptyDir:
          sizeLimit: 1Gi
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: guardrails-hpa
  namespace: guardrails
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: guardrails-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
